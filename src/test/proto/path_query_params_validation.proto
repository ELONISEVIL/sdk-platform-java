// Copyright 2021 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/cloud/extended_operations.proto";

package google.showcase.v1beta1;

option go_package = "github.com/googleapis/gapic-showcase/server/genproto";
option java_package = "com.google.showcase.v1beta1";
option java_multiple_files = true;

// This service is used to test that GAPICs can transcode proto3 requests to
// REST format correctly for various types of HTTP annotations.
service PathQueryParamValidation {
  // This service is meant to only run locally on the port 7469 (keypad digits
  // for "show").
  option (google.api.default_host) = "localhost:7469";


  // This method should fail due to one of the query params being an object
  rpc ValidationDataQuery(ValidationRequest) returns (ValidationResponse) {
    option (google.api.http) = {
      get: "/v1beta1/validation:query"
    };
  }

  // This method should fail at generation time due to one of the path params
  // being an object
  rpc ValidationDataSimplePath(ValidationRequest) returns (ValidationResponse) {
    option (google.api.http) = {
      get: "/v1beta1/validation/{info.f_string}/{info.f_child}/{info.color}:simplepath"
    };
  }
}

message ValidationRequest {
  string primitive = 1;
  ValidationData info = 2;

}

message ValidationResponse {
  ValidationData info = 1;
}


// ValidationData is a message used for testing path and query param validations
message ValidationData {
  enum Color {
    RED = 0;
    BLUE = 1;
    GREEN = 2;
    YELLOW = 3;
}
  string f_string = 1;
  int32 f_int32 = 2;
  Color f_color = 3;
  ValidationDataChild f_child = 4;
}

message ValidationDataChild {
  string f_string = 1;
}
