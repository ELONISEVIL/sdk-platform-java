# Copyright 2024 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

timeout: 7200s # 2 hours
substitutions:
  _IMAGE_NAME: "gcr.io/cloud-devrel-public-resources/java-library-generation"
  _GAPIC_GENERATOR_JAVA_VERSION: '2.45.1-SNAPSHOT' # {x-version-update:gapic-generator-java:current}
  _VERSIONED_IMAGE_ID: "${_IMAGE_NAME}:${_GAPIC_GENERATOR_JAVA_VERSION}"
steps:
  # Skip the
  - id: skip-if-coming-from-fork
    name: bash
    allowFailure: true # in case we `exit 1`, assume it's not a failure
    script: |
      if [[ "${_HEAD_REPO_URL}" != "https://www.github.com/googleapis/sdk-platform-java" ]]; then
        echo "this PR comes from a fork. Aborting."
        exit 1
      fi
  - id: library-generation-build
    name: gcr.io/cloud-builders/docker
    waitFor: ["skip-if-coming-from-fork"]
    args: [
      "build",
      "-t", "${_VERSIONED_IMAGE_ID}",
      "--file", ".cloudbuild/library_generation/library_generation.Dockerfile", "."]
    env:
    - 'DOCKER_BUILDKIT=1'
  - id: maven-build
    name: gcr.io/cloud-builders/mvn
    waitFor: ["skip-if-coming-from-fork"]
    args: [
      "mvn",
      "install", "-B", "-ntp", "-T2C"
      "-DskipTests", "-Dmaven.test.skip", "-Dcheckstyle.skip", "-Dclirr.skip",
      "-Dmaven.javadoc.skip"
    ]
  - id: script-run
    name: gcr.io/google.com/cloudsdktool/cloud-sdk # contains docker and git
    waitFor: ["maven-build", "library-generation-build"]
    script: |
      set -x
      [ -z "$(git config user.email)" ] && git config --global user.email "cloud-java-bot@google.com"
      [ -z "$(git config user.name)" ] && git config --global user.name "cloud-java-bot"
      bash .github/scripts/hermetic_library_generation.sh \
        --target_branch "${_BASE_BRANCH}" \
        --current_branch "${_HEAD_BRANCH}" \
        --image_tag "${_VERSIONED_IMAGE_ID}"
options:
  # Builds ran by service accounts we need to either a) specify a logs bucket,
  # b) use REGIONAL_USER_OWNER_BUCKET, or c) use CLOUD_LOGGING_ONLY. We go for c)
  logging: CLOUD_LOGGING_ONLY